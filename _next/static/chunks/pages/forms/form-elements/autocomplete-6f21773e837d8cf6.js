(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6192],{75158:function(e,t,n){"use strict";n.d(t,{Z:function(){return S}});var o=n(63366),l=n(87462),i=n(67294),s=n(86010),a=n(94780),r=n(41796),p=n(37743),c=n(54235),m=n(85893),d=(0,c.Z)((0,m.jsx)("path",{d:"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"}),"CheckBoxOutlineBlank"),u=(0,c.Z)((0,m.jsx)("path",{d:"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"}),"CheckBox"),x=(0,c.Z)((0,m.jsx)("path",{d:"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"}),"IndeterminateCheckBox"),h=n(36622),f=n(78884),g=n(67074),j=n(1588),b=n(34867);function F(e){return(0,b.Z)("MuiCheckbox",e)}let O=(0,j.Z)("MuiCheckbox",["root","checked","disabled","indeterminate","colorPrimary","colorSecondary"]),Z=["checkedIcon","color","icon","indeterminate","indeterminateIcon","inputProps","size","className"],w=e=>{let{classes:t,indeterminate:n,color:o}=e,i={root:["root",n&&"indeterminate",`color${(0,h.Z)(o)}`]},s=(0,a.Z)(i,F,t);return(0,l.Z)({},t,s)},A=(0,g.ZP)(p.Z,{shouldForwardProp:e=>(0,g.FO)(e)||"classes"===e,name:"MuiCheckbox",slot:"Root",overridesResolver(e,t){let{ownerState:n}=e;return[t.root,n.indeterminate&&t.indeterminate,"default"!==n.color&&t[`color${(0,h.Z)(n.color)}`]]}})(({theme:e,ownerState:t})=>(0,l.Z)({color:(e.vars||e).palette.text.secondary},!t.disableRipple&&{"&:hover":{backgroundColor:e.vars?`rgba(${"default"===t.color?e.vars.palette.action.activeChannel:e.vars.palette.primary.mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,r.Fq)("default"===t.color?e.palette.action.active:e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"default"!==t.color&&{[`&.${O.checked}, &.${O.indeterminate}`]:{color:(e.vars||e).palette[t.color].main},[`&.${O.disabled}`]:{color:(e.vars||e).palette.action.disabled}})),I=(0,m.jsx)(u,{}),C=(0,m.jsx)(d,{}),v=(0,m.jsx)(x,{}),y=i.forwardRef(function(e,t){var n,a;let r=(0,f.Z)({props:e,name:"MuiCheckbox"}),{checkedIcon:p=I,color:c="primary",icon:d=C,indeterminate:u=!1,indeterminateIcon:x=v,inputProps:h,size:g="medium",className:j}=r,b=(0,o.Z)(r,Z),F=u?x:d,O=u?x:p,y=(0,l.Z)({},r,{color:c,indeterminate:u,size:g}),S=w(y);return(0,m.jsx)(A,(0,l.Z)({type:"checkbox",inputProps:(0,l.Z)({"data-indeterminate":u},h),icon:i.cloneElement(F,{fontSize:null!=(n=F.props.fontSize)?n:g}),checkedIcon:i.cloneElement(O,{fontSize:null!=(a=O.props.fontSize)?a:g}),ownerState:y,ref:t,className:(0,s.Z)(S.root,j)},b,{classes:S}))});var S=y},66485:function(e){function t(){return new DOMException("The request is not allowed","NotAllowedError")}async function n(e){if(!navigator.clipboard)throw t();return navigator.clipboard.writeText(e)}async function o(e){let n=document.createElement("span");n.textContent=e,n.style.whiteSpace="pre",n.style.webkitUserSelect="auto",n.style.userSelect="all",document.body.appendChild(n);let o=window.getSelection(),l=window.document.createRange();o.removeAllRanges(),l.selectNode(n),o.addRange(l);let i=!1;try{i=window.document.execCommand("copy")}finally{o.removeAllRanges(),window.document.body.removeChild(n)}if(!i)throw t()}async function l(e){try{await n(e)}catch(i){try{await o(e)}catch(l){throw l||i||t()}}}/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ e.exports=l},91669:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/forms/form-elements/autocomplete",function(){return n(34e3)}])},39913:function(e,t,n){"use strict";n.d(t,{Z:function(){return I}});var o=n(85893),l=n(67294),i=n(61953),s=n(49837),a=n(72389),r=n(44373),p=n(93481),c=n(80562),m=n(59742),d=n(91359),u=n(87054),x=n(61225),h=n(85390),f=n(21609),g=n(15660),j=n.n(g),b=n(86501),F=n(66485),O=n.n(F);let Z=e=>e&&("TEXTAREA"===e.nodeName||"INPUT"===e.nodeName),w=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=(0,l.useRef)(null),n=()=>{e.onSuccess&&e.onSuccess(),e.selectOnCopy&&Z(t.current)&&t.current.select()},o=()=>{e.onError&&e.onError();let n=!1!==e.selectOnError;n&&Z(t.current)&&t.current.select()},i=e=>{O()(e).then(n).catch(o)},s=(0,l.useCallback)(e=>{"string"==typeof e?i(e):t.current&&i(t.current.value)},[]);return{copy:s,target:t}},A=e=>{let{id:t,sx:n,code:g,title:F,children:O,className:Z}=e,[A,I]=(0,l.useState)(!1),[C,v]=(0,l.useState)(null!==g.tsx?"tsx":"jsx"),y=w(),S=(0,x.Z)(e=>e.breakpoints.down("md"));(0,l.useEffect)(()=>{j().highlightAll()},[A,C]);let T=()=>null!==g.tsx&&"tsx"===C?g.tsx.props.children.props.children:null!==g.jsx&&"jsx"===C?g.jsx.props.children.props.children:"",L=()=>{y.copy(T()),b.ZP.success("The source code has been copied to your clipboard.",{duration:2e3})};return(0,o.jsxs)(s.Z,{className:Z,sx:{"& .MuiCardHeader-action":{lineHeight:.8},...n},id:t||"card-snippet--".concat(F.toLowerCase().replace(/ /g,"-")),children:[(0,o.jsx)(m.Z,{title:F,...S?{}:{action:(0,o.jsx)(c.Z,{onClick:()=>I(!A),children:(0,o.jsx)(f.Z,{icon:"mdi:code-tags",fontSize:20})})}}),(0,o.jsx)(d.Z,{children:O}),S?null:(0,o.jsxs)(p.Z,{in:A,children:[(0,o.jsx)(r.Z,{sx:{my:"0 !important"}}),(0,o.jsxs)(d.Z,{sx:{position:"relative","& pre":{m:"0 !important",maxHeight:500}},children:[(0,o.jsx)(i.Z,{sx:{mb:4,display:"flex",alignItems:"center",justifyContent:"flex-end"},children:(0,o.jsxs)(h.Z,{exclusive:!0,size:"small",color:"primary",value:C,onChange:(e,t)=>null!==t?v(t):null,children:[null!==g.tsx?(0,o.jsx)(u.Z,{value:"tsx",children:(0,o.jsx)(f.Z,{icon:"mdi:language-typescript",fontSize:20})}):null,null!==g.jsx?(0,o.jsx)(u.Z,{value:"jsx",children:(0,o.jsx)(f.Z,{icon:"mdi:language-javascript",fontSize:20})}):null]})}),(0,o.jsx)(a.Z,{title:"Copy the source",placement:"top",children:(0,o.jsx)(c.Z,{onClick:L,sx:{top:"5rem",color:"grey.100",right:"2.5625rem",position:"absolute"},children:(0,o.jsx)(f.Z,{icon:"mdi:content-copy",fontSize:20})})}),(0,o.jsx)("div",{children:null!==g[C]?g[C]:null})]})]})]})};var I=A},34e3:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return en}});var o=n(85893),l=n(79072),i=n(29630),s=n(39913),a=n(61953),r=n(67836),p=n(35966),c=n(42618);let m=()=>(0,o.jsxs)(a.Z,{className:"demo-space-x",sx:{display:"flex",flexWrap:"wrap"},children:[(0,o.jsx)(p.Z,{sx:{width:250},disableCloseOnSelect:!0,options:c.g,id:"autocomplete-disableCloseOnSelect",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"disableCloseOnSelect"})}),(0,o.jsx)(p.Z,{clearOnEscape:!0,sx:{width:250},options:c.g,id:"autocomplete-clearOnEscape",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"clearOnEscape"})}),(0,o.jsx)(p.Z,{disableClearable:!0,sx:{width:250},options:c.g,id:"autocomplete-disableClearable",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"disableClearable"})}),(0,o.jsx)(p.Z,{openOnFocus:!0,sx:{width:250},options:c.g,id:"autocomplete-openOnFocus",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"openOnFocus"})}),(0,o.jsx)(p.Z,{autoHighlight:!0,sx:{width:250},options:c.g,id:"autocomplete-autoHighlight",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"autoHighlight"})}),(0,o.jsx)(p.Z,{autoSelect:!0,sx:{width:250},options:c.g,id:"autocomplete-autoSelect",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"autoSelect"})}),(0,o.jsx)(p.Z,{blurOnSelect:!0,sx:{width:250},options:c.g,id:"autocomplete-blurOnSelect",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"blurOnSelect"})}),(0,o.jsx)(p.Z,{clearOnBlur:!0,sx:{width:250},options:c.g,id:"autocomplete-clearOnBlur",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"clearOnBlur"})}),(0,o.jsx)(p.Z,{sx:{width:250},options:c.g,selectOnFocus:!1,id:"autocomplete-selectOnFocus",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"selectOnFocus={false}"})})]}),d=()=>(0,o.jsx)(p.Z,{autoHighlight:!0,sx:{width:250},id:"autocomplete-country-select",options:c.h,getOptionLabel:e=>e.label,renderOption:(e,t)=>(0,o.jsxs)(a.Z,{component:"li",sx:{"& > img":{mr:4,flexShrink:0}},...e,children:[(0,o.jsx)("img",{alt:"",width:"20",loading:"lazy",src:"https://flagcdn.com/w20/".concat(t.code.toLowerCase(),".png"),srcSet:"https://flagcdn.com/w40/".concat(t.code.toLowerCase(),".png 2x")}),t.label," (",t.code,") +",t.phone]}),renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Choose a country",inputProps:{...e.inputProps,autoComplete:"new-password"}})}),u=()=>{let e=c.g.map(e=>{let t=e.title[0].toUpperCase();return{firstLetter:/[0-9]/.test(t)?"0-9":t,...e}});return(0,o.jsx)(p.Z,{sx:{width:250},id:"autocomplete-grouped",groupBy:e=>e.firstLetter,getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"With categories"}),options:e.sort((e,t)=>-t.firstLetter.localeCompare(e.firstLetter))})},x=()=>(0,o.jsxs)(a.Z,{className:"demo-space-x",sx:{display:"flex",flexWrap:"wrap"},children:[(0,o.jsx)(p.Z,{sx:{width:250},options:c.g,id:"autocomplete-outlined",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Combo box"})}),(0,o.jsx)(p.Z,{sx:{width:250},options:c.g,id:"autocomplete-filled",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Combo box",variant:"filled"})}),(0,o.jsx)(p.Z,{sx:{width:250},options:c.g,id:"autocomplete-default",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Combo box",variant:"standard"})}),(0,o.jsx)(p.Z,{disabled:!0,sx:{width:250},options:c.g,id:"autocomplete-disabled",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Disabled"})})]}),h=()=>(0,o.jsx)(p.Z,{freeSolo:!0,sx:{width:250},id:"autocomplete-free-solo",options:c.g.map(e=>e.title),renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Free Solo"})});var f=n(67294),g=n(15949);let j=(0,g.D)(),b=()=>{let[e,t]=(0,f.useState)(null);return(0,o.jsx)(p.Z,{freeSolo:!0,clearOnBlur:!0,value:e,selectOnFocus:!0,handleHomeEndKeys:!0,sx:{width:250},options:c.g,id:"autocomplete-free-solo-with-text",renderOption:(e,t)=>(0,o.jsx)("li",{...e,children:t.title}),renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Free solo with text demo"}),getOptionLabel:e=>"string"==typeof e?e:e.inputValue?e.inputValue:e.title,onChange(e,n){"string"==typeof n?t({title:n}):n&&n.inputValue?t({title:n.inputValue}):t(n)},filterOptions(e,t){let n=j(e,t),{inputValue:o}=t,l=e.some(e=>o===e.title);return""===o||l||n.push({inputValue:o,title:'Add "'.concat(o,'"')}),n}})},F=()=>(0,o.jsx)(p.Z,{multiple:!0,limitTags:2,options:c.g,id:"autocomplete-limit-tags",getOptionLabel:e=>e.title,defaultValue:[c.g[13],c.g[12],c.g[11]],renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"limitTags",placeholder:"Favorites"})}),O=()=>(0,o.jsxs)("div",{children:[(0,o.jsx)(p.Z,{size:"small",options:c.g,id:"autocomplete-size-small",defaultValue:c.g[13],getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Size small",placeholder:"Favorites"})}),(0,o.jsx)(p.Z,{multiple:!0,size:"small",sx:{mt:5},options:c.g,defaultValue:[c.g[13]],id:"autocomplete-size-small-multi",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Size small",placeholder:"Favorites"})})]});var Z=n(75158);let w=()=>(0,o.jsx)(p.Z,{multiple:!0,disableCloseOnSelect:!0,options:c.g,id:"autocomplete-checkboxes",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Checkboxes",placeholder:"Favorites"}),renderOption(e,t,n){let{selected:l}=n;return(0,o.jsxs)("li",{...e,children:[(0,o.jsx)(Z.Z,{checked:l,sx:{mr:2}}),t.title]})}}),A=["Option 1","Option 2"],I=()=>(0,o.jsx)(p.Z,{options:A,id:"autocomplete-custom-input",renderInput:e=>(0,o.jsx)("div",{ref:e.InputProps.ref,children:(0,o.jsx)("input",{type:"text",...e.inputProps})}),sx:{display:"inline-block","& input":{width:200,backgroundColor:"background.paper",color:e=>e.palette.getContrastText(e.palette.background.paper)}}});var C=n(21448);let v=[c.g[6]],y=()=>{let[e,t]=(0,f.useState)([...v,c.g[13]]);return(0,o.jsx)(p.Z,{multiple:!0,value:e,options:c.g,id:"autocomplete-fixed-option",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Fixed tag",placeholder:"Favorites"}),onChange(e,n){t([...v,...n.filter(e=>-1===v.indexOf(e))])},renderTags:(e,t)=>e.map((e,n)=>(0,f.createElement)(C.Z,{label:e.title,...t({index:n}),disabled:-1!==v.indexOf(e),key:n}))})},S=(0,g.D)({matchFrom:"start",stringify:e=>e.title}),T=()=>(0,o.jsx)(p.Z,{options:c.g,filterOptions:S,id:"autocomplete-custom-filter",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Custom filter"})}),L=()=>(0,o.jsxs)(a.Z,{sx:{display:"flex",flexWrap:"wrap"},children:[(0,o.jsx)(p.Z,{multiple:!0,options:c.g,filterSelectedOptions:!0,defaultValue:[c.g[13]],id:"autocomplete-multiple-outlined",getOptionLabel:e=>e.title,sx:{width:250,mt:5,mr:5},renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"filterSelectedOptions",placeholder:"Favorites"})}),(0,o.jsx)(p.Z,{freeSolo:!0,multiple:!0,id:"autocomplete-multiple-filled",defaultValue:[c.g[13].title],sx:{width:250,mt:5,mr:5},options:c.g.map(e=>e.title),renderInput:e=>(0,o.jsx)(r.Z,{...e,variant:"filled",label:"freeSolo",placeholder:"Favorites"}),renderTags:(e,t)=>e.map((e,n)=>(0,f.createElement)(C.Z,{variant:"outlined",label:e,...t({index:n}),key:n}))}),(0,o.jsx)(p.Z,{multiple:!0,options:c.g,defaultValue:[c.g[13]],sx:{width:250,mt:5},id:"autocomplete-multiple-standard",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Multiple values",placeholder:"Favorites",variant:"standard"})})]}),k=Array.from(Array(48)).map((e,t)=>"".concat(t<20?"0":"").concat(Math.floor(t/2),":").concat(t%2==0?"00":"30")),V=()=>(0,o.jsx)(p.Z,{sx:{width:250},options:k,id:"autocomplete-disabled-options",renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Disabled options"}),getOptionDisabled:e=>e===k[0]||e===k[2]});var P=n(70754),N=n(50196);let z=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;return new Promise(t=>{setTimeout(t,e)})},U=()=>{let[e,t]=(0,f.useState)(!1),[n,l]=(0,f.useState)([]),i=e&&0===n.length;return(0,f.useEffect)(()=>{let e=!0;if(!i)return;let t=async()=>{let t=await N.ZP.get("/forms/autocomplete");await z(1e3);let n=await t.data;e&&l(Object.keys(n).map(e=>n[e]))};return t(),()=>{e=!1}},[i]),(0,f.useEffect)(()=>{e||l([])},[e]),(0,o.jsx)(p.Z,{open:e,options:n,loading:i,onOpen:()=>t(!0),onClose:()=>t(!1),id:"autocomplete-asynchronous-request",getOptionLabel:e=>e.title,isOptionEqualToValue:(e,t)=>e.title===t.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Asynchronous",InputProps:{...e.InputProps,endAdornment:(0,o.jsxs)(f.Fragment,{children:[i?(0,o.jsx)(P.Z,{color:"inherit",size:20}):null,e.InputProps.endAdornment]})}})})},E=()=>{let[e,t]=(0,f.useState)(null),n=(e,n)=>{t(n)};return(0,o.jsxs)(a.Z,{className:"demo-space-x",sx:{display:"flex",flexWrap:"wrap"},children:[(0,o.jsx)(p.Z,{value:e,sx:{width:250},options:c.g,onChange:n,id:"autocomplete-controlled",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Controlled"})}),(0,o.jsx)(p.Z,{sx:{width:250},options:c.g,id:"autocomplete-uncontrolled",getOptionLabel:e=>e.title,renderInput:e=>(0,o.jsx)(r.Z,{...e,label:"Uncontrolled"})})]})},B=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { Fragment, useEffect, useState } from 'react'\n\n// ** MUI Imports\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\nimport CircularProgress from '@mui/material/CircularProgress'\n\n// ** Third Party Imports\nimport axios from 'axios'\n\nconst sleep = (delay = 0) => {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay)\n  })\n}\n\nconst AutocompleteAsynchronousRequest = () => {\n  // ** States\n  const [open, setOpen] = useState(false)\n  const [options, setOptions] = useState([])\n  const loading = open && options.length === 0\n  useEffect(() => {\n    let active = true\n    if (!loading) {\n      return undefined\n    }\n\n    const fetchData = async () => {\n      const response = await axios.get('/forms/autocomplete')\n      await sleep(1000)\n      const top100Films = await response.data\n      if (active) {\n        setOptions(Object.keys(top100Films).map(key => top100Films[key]))\n      }\n    }\n    fetchData()\n\n    return () => {\n      active = false\n    }\n  }, [loading])\n  useEffect(() => {\n    if (!open) {\n      setOptions([])\n    }\n  }, [open])\n\n  return (\n    <Autocomplete\n      open={open}\n      options={options}\n      loading={loading}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      id='autocomplete-asynchronous-request'\n      getOptionLabel={option => option.title}\n      isOptionEqualToValue={(option, value) => option.title === value.title}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label='Asynchronous'\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <Fragment>\n                {loading ? <CircularProgress color='inherit' size={20} /> : null}\n                {params.InputProps.endAdornment}\n              </Fragment>\n            )\n          }}\n        />\n      )}\n    />\n  )\n}\n\nexport default AutocompleteAsynchronousRequest\n"})}),M=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Checkbox from '@mui/material/Checkbox'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteCheckboxes = () => {\n  return (\n    <Autocomplete\n      multiple\n      disableCloseOnSelect\n      options={top100Films}\n      id='autocomplete-checkboxes'\n      getOptionLabel={option => option.title}\n      renderInput={params => <TextField {...params} label='Checkboxes' placeholder='Favorites' />}\n      renderOption={(props, option, { selected }) => (\n        <li {...props}>\n          <Checkbox checked={selected} sx={{ mr: 2 }} />\n          {option.title}\n        </li>\n      )}\n    />\n  )\n}\n\nexport default AutocompleteCheckboxes\n"})}),D=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteControlledUncontrolled = () => {\n  // ** State\n  const [value, setValue] = useState(null)\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue)\n  }\n\n  return (\n    <Box className='demo-space-x' sx={{ display: 'flex', flexWrap: 'wrap' }}>\n      <Autocomplete\n        value={value}\n        sx={{ width: 250 }}\n        options={top100Films}\n        onChange={handleChange}\n        id='autocomplete-controlled'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='Controlled' />}\n      />\n      <Autocomplete\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-uncontrolled'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='Uncontrolled' />}\n      />\n    </Box>\n  )\n}\n\nexport default AutocompleteControlledUncontrolled\n"})}),H=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { countries } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteCountry = () => {\n  return (\n    <Autocomplete\n      autoHighlight\n      sx={{ width: 250 }}\n      id='autocomplete-country-select'\n      options={countries}\n      getOptionLabel={option => option.label}\n      renderOption={(props, option) => (\n        <Box component='li' sx={{ '& > img': { mr: 4, flexShrink: 0 } }} {...props}>\n          <img\n            alt=''\n            width='20'\n            loading='lazy'\n            src={https://flagcdn.com/w20/{option.code.toLowerCase()}.png}\n            srcSet={https://flagcdn.com/w40/{option.code.toLowerCase()}.png 2x}\n          />\n          {option.label} ({option.code}) +{option.phone}\n        </Box>\n      )}\n      renderInput={params => (\n        <TextField\n          {...params}\n          label='Choose a country'\n          inputProps={{\n            ...params.inputProps,\n            autoComplete: 'new-password'\n          }}\n        />\n      )}\n    />\n  )\n}\n\nexport default AutocompleteCountry\n"})}),R=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TextField from '@mui/material/TextField'\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst filterOptions = createFilterOptions({\n  matchFrom: 'start',\n  stringify: option => option.title\n})\n\nconst AutocompleteCustomFilter = () => {\n  return (\n    <Autocomplete\n      options={top100Films}\n      filterOptions={filterOptions}\n      id='autocomplete-custom-filter'\n      getOptionLabel={option => option.title}\n      renderInput={params => <TextField {...params} label='Custom filter' />}\n    />\n  )\n}\n\nexport default AutocompleteCustomFilter\n"})}),_=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Autocomplete from '@mui/material/Autocomplete'\n\nconst options = ['Option 1', 'Option 2']\n\nconst AutocompleteCustomInput = () => {\n  return (\n    <Autocomplete\n      options={options}\n      id='autocomplete-custom-input'\n      renderInput={params => (\n        <div ref={params.InputProps.ref}>\n          <input type='text' {...params.inputProps} />\n        </div>\n      )}\n      sx={{\n        display: 'inline-block',\n        '& input': {\n          width: 200,\n          backgroundColor: 'background.paper',\n          color: theme => theme.palette.getContrastText(theme.palette.background.paper)\n        }\n      }}\n    />\n  )\n}\n\nexport default AutocompleteCustomInput\n"})}),W=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport TextField from '@mui/material/TextField'\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst filter = createFilterOptions()\n\nconst AutocompleteCreatable = () => {\n  // ** State\n  const [value, setValue] = useState(null)\n\n  return (\n    <Autocomplete\n      freeSolo\n      clearOnBlur\n      value={value}\n      selectOnFocus\n      handleHomeEndKeys\n      sx={{ width: 250 }}\n      options={top100Films}\n      id='autocomplete-free-solo-with-text'\n      renderOption={(props, option) => <li {...props}>{option.title}</li>}\n      renderInput={params => <TextField {...params} label='Free solo with text demo' />}\n      getOptionLabel={option => {\n        if (typeof option === 'string') {\n          return option\n        }\n        if (option.inputValue) {\n          return option.inputValue\n        }\n\n        return option.title\n      }}\n      onChange={(event, newValue) => {\n        if (typeof newValue === 'string') {\n          setValue({\n            title: newValue\n          })\n        } else if (newValue && newValue.inputValue) {\n          setValue({\n            title: newValue.inputValue\n          })\n        } else {\n          setValue(newValue)\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params)\n        const { inputValue } = params\n        const isExisting = options.some(option => inputValue === option.title)\n        if (inputValue !== '' && !isExisting) {\n          filtered.push({\n            inputValue,\n            title: Add \"{inputValue}\"\n          })\n        }\n\n        return filtered\n      }}\n    />\n  )\n}\n\nexport default AutocompleteCreatable\n"})}),q=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\nconst timeSlots = Array.from(new Array(24 * 2)).map(\n  (_, index) => {index < 20 ? '0' : ''}{Math.floor(index / 2)}:{index % 2 === 0 ? '00' : '30'}\n)\n\nconst AutocompleteDisabledOptions = () => {\n  return (\n    <Autocomplete\n      sx={{ width: 250 }}\n      options={timeSlots}\n      id='autocomplete-disabled-options'\n      renderInput={params => <TextField {...params} label='Disabled options' />}\n      getOptionDisabled={option => option === timeSlots[0] || option === timeSlots[2]}\n    />\n  )\n}\n\nexport default AutocompleteDisabledOptions\n"})}),$=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteGrouped = () => {\n  const options = top100Films.map(option => {\n    const firstLetter = option.title[0].toUpperCase()\n\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      ...option\n    }\n  })\n\n  return (\n    <Autocomplete\n      sx={{ width: 250 }}\n      id='autocomplete-grouped'\n      groupBy={option => option.firstLetter}\n      getOptionLabel={option => option.title}\n      renderInput={params => <TextField {...params} label='With categories' />}\n      options={options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter))}\n    />\n  )\n}\n\nexport default AutocompleteGrouped\n"})}),G=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteFreeSolo = () => {\n  return (\n    <Autocomplete\n      freeSolo\n      sx={{ width: 250 }}\n      id='autocomplete-free-solo'\n      options={top100Films.map(option => option.title)}\n      renderInput={params => <TextField {...params} label='Free Solo' />}\n    />\n  )\n}\n\nexport default AutocompleteFreeSolo\n"})}),X=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport Chip from '@mui/material/Chip'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteMultipleValues = () => {\n  return (\n    <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\n      <Autocomplete\n        multiple\n        options={top100Films}\n        filterSelectedOptions\n        defaultValue={[top100Films[13]]}\n        id='autocomplete-multiple-outlined'\n        getOptionLabel={option => option.title}\n        sx={{ width: 250, mt: 5, mr: 5 }}\n        renderInput={params => <TextField {...params} label='filterSelectedOptions' placeholder='Favorites' />}\n      />\n      <Autocomplete\n        freeSolo\n        multiple\n        id='autocomplete-multiple-filled'\n        defaultValue={[top100Films[13].title]}\n        sx={{ width: 250, mt: 5, mr: 5 }}\n        options={top100Films.map(option => option.title)}\n        renderInput={params => <TextField {...params} variant='filled' label='freeSolo' placeholder='Favorites' />}\n        renderTags={(value, getTagProps) =>\n          value.map((option, index) => (\n            <Chip variant='outlined' label={option} {...getTagProps({ index })} key={index} />\n          ))\n        }\n      />\n      <Autocomplete\n        multiple\n        options={top100Films}\n        defaultValue={[top100Films[13]]}\n        sx={{ width: 250, mt: 5 }}\n        id='autocomplete-multiple-standard'\n        getOptionLabel={option => option.title}\n        renderInput={params => (\n          <TextField {...params} label='Multiple values' placeholder='Favorites' variant='standard' />\n        )}\n      />\n    </Box>\n  )\n}\n\nexport default AutocompleteMultipleValues\n"})}),Y=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteLimitTags = () => {\n  return (\n    <Autocomplete\n      multiple\n      limitTags={2}\n      options={top100Films}\n      id='autocomplete-limit-tags'\n      getOptionLabel={option => option.title}\n      defaultValue={[top100Films[13], top100Films[12], top100Films[11]]}\n      renderInput={params => <TextField {...params} label='limitTags' placeholder='Favorites' />}\n    />\n  )\n}\n\nexport default AutocompleteLimitTags\n"})}),K=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** React Imports\nimport { useState } from 'react'\n\n// ** MUI Imports\nimport Chip from '@mui/material/Chip'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst fixedOptions = [top100Films[6]]\n\nconst AutocompleteFixedOptions = () => {\n  // ** State\n  const [value, setValue] = useState([...fixedOptions, top100Films[13]])\n\n  return (\n    <Autocomplete\n      multiple\n      value={value}\n      options={top100Films}\n      id='autocomplete-fixed-option'\n      getOptionLabel={option => option.title}\n      renderInput={params => <TextField {...params} label='Fixed tag' placeholder='Favorites' />}\n      onChange={(event, newValue) => {\n        setValue([...fixedOptions, ...newValue.filter(option => fixedOptions.indexOf(option) === -1)])\n      }}\n      renderTags={(tagValue, getTagProps) =>\n        tagValue.map((option, index) => (\n          <Chip\n            label={option.title}\n            {...getTagProps({ index })}\n            disabled={fixedOptions.indexOf(option) !== -1}\n            key={index}\n          />\n        ))\n      }\n    />\n  )\n}\n\nexport default AutocompleteFixedOptions\n"})}),J=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteProps = () => {\n  return (\n    <Box className='demo-space-x' sx={{ display: 'flex', flexWrap: 'wrap' }}>\n      <Autocomplete\n        sx={{ width: 250 }}\n        disableCloseOnSelect\n        options={top100Films}\n        id='autocomplete-disableCloseOnSelect'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='disableCloseOnSelect' />}\n      />\n      <Autocomplete\n        clearOnEscape\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-clearOnEscape'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='clearOnEscape' />}\n      />\n      <Autocomplete\n        disableClearable\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-disableClearable'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='disableClearable' />}\n      />\n      <Autocomplete\n        openOnFocus\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-openOnFocus'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='openOnFocus' />}\n      />\n      <Autocomplete\n        autoHighlight\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-autoHighlight'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='autoHighlight' />}\n      />\n      <Autocomplete\n        autoSelect\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-autoSelect'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='autoSelect' />}\n      />\n      <Autocomplete\n        blurOnSelect\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-blurOnSelect'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='blurOnSelect' />}\n      />\n      <Autocomplete\n        clearOnBlur\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-clearOnBlur'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='clearOnBlur' />}\n      />\n      <Autocomplete\n        sx={{ width: 250 }}\n        options={top100Films}\n        selectOnFocus={false}\n        id='autocomplete-selectOnFocus'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='selectOnFocus={false}' />}\n      />\n    </Box>\n  )\n}\n\nexport default AutocompleteProps\n"})}),Q=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Box from '@mui/material/Box'\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteVariants = () => {\n  return (\n    <Box className='demo-space-x' sx={{ display: 'flex', flexWrap: 'wrap' }}>\n      <Autocomplete\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-outlined'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='Combo box' />}\n      />\n      <Autocomplete\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-filled'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='Combo box' variant='filled' />}\n      />\n      <Autocomplete\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-default'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='Combo box' variant='standard' />}\n      />\n      <Autocomplete\n        disabled\n        sx={{ width: 250 }}\n        options={top100Films}\n        id='autocomplete-disabled'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='Disabled' />}\n      />\n    </Box>\n  )\n}\n\nexport default AutocompleteVariants\n"})}),ee=(0,o.jsx)("pre",{className:"language-jsx",children:(0,o.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport TextField from '@mui/material/TextField'\nimport Autocomplete from '@mui/material/Autocomplete'\n\n// ** Data\nimport { top100Films } from 'src/@fake-db/autocomplete'\n\nconst AutocompleteSmallSize = () => {\n  return (\n    <div>\n      <Autocomplete\n        size='small'\n        options={top100Films}\n        id='autocomplete-size-small'\n        defaultValue={top100Films[13]}\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='Size small' placeholder='Favorites' />}\n      />\n      <Autocomplete\n        multiple\n        size='small'\n        sx={{ mt: 5 }}\n        options={top100Films}\n        defaultValue={[top100Films[13]]}\n        id='autocomplete-size-small-multi'\n        getOptionLabel={option => option.title}\n        renderInput={params => <TextField {...params} label='Size small' placeholder='Favorites' />}\n      />\n    </div>\n  )\n}\n\nexport default AutocompleteSmallSize\n"})}),et=()=>(0,o.jsxs)(l.ZP,{container:!0,spacing:6,className:"match-height",children:[(0,o.jsx)(l.ZP,{item:!0,xs:12,children:(0,o.jsxs)(s.Z,{title:"Variants",code:{tsx:null,jsx:Q},children:[(0,o.jsxs)(i.Z,{children:["Use ",(0,o.jsxs)("code",{children:["variant=","{'filled' | 'standard'}"]})," prop with ",(0,o.jsx)("code",{children:"TextField"})," component in"," ",(0,o.jsx)("code",{children:"renderInput"})," prop with ",(0,o.jsx)("code",{children:"Autocomplete"})," component for different variants of input. Use"," ",(0,o.jsx)("code",{children:"disabled"})," prop with ",(0,o.jsx)("code",{children:"Autocomplete"})," component for disabled autocomplete."]}),(0,o.jsx)(x,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,children:(0,o.jsxs)(s.Z,{title:"Controlled and Uncontrolled",code:{tsx:null,jsx:D},children:[(0,o.jsxs)(i.Z,{children:["Use ",(0,o.jsx)("code",{children:"value"})," prop with ",(0,o.jsx)("code",{children:"Autocomplete"})," component for controlled autocomplete input."]}),(0,o.jsx)(E,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,children:(0,o.jsxs)(s.Z,{title:"Autocomplete Props",code:{tsx:null,jsx:J},children:[(0,o.jsxs)(i.Z,{children:["Each of the following examples demonstrate one feature of ",(0,o.jsx)("code",{children:"Autocomplete"})," component."]}),(0,o.jsx)(m,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Country Select",code:{tsx:null,jsx:H},children:[(0,o.jsx)(i.Z,{sx:{mb:4},children:"Choose one of the countries."}),(0,o.jsx)(d,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Free Solo",code:{tsx:null,jsx:G},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"freeSolo"})," prop so the textbox can contain any arbitrary value."]}),(0,o.jsx)(h,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Creatable",code:{tsx:null,jsx:W},children:[(0,o.jsx)(i.Z,{sx:{mb:4},children:"You can create an option other than from the list."}),(0,o.jsx)(b,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Grouped",code:{tsx:null,jsx:$},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"groupBy"})," prop to group the list according to your needs."]}),(0,o.jsx)(u,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Disabled Options",code:{tsx:null,jsx:q},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"getOptionDisabled"})," prop to disable some options from the list."]}),(0,o.jsx)(V,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Asynchronous Request",code:{tsx:null,jsx:B},children:[(0,o.jsx)(i.Z,{sx:{mb:4},children:"You can fetch the data with the help of APIs for the options."}),(0,o.jsx)(U,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,children:(0,o.jsxs)(s.Z,{title:"Multiple Values",code:{tsx:null,jsx:X},children:[(0,o.jsxs)(i.Z,{children:["Use ",(0,o.jsx)("code",{children:"multiple"})," prop to select multiple options from the list."]}),(0,o.jsx)(L,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Fixed Options",code:{tsx:null,jsx:K},children:[(0,o.jsx)(i.Z,{sx:{mb:4},children:"You can fix an option in the input and add any other option as well."}),(0,o.jsx)(y,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Checkboxes",code:{tsx:null,jsx:M},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"Checkbox"})," component in ",(0,o.jsx)("code",{children:"renderOption"})," prop to render checkbox in options."]}),(0,o.jsx)(w,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Limit Tags",code:{tsx:null,jsx:Y},children:[(0,o.jsxs)(i.Z,{sx:{mb:6},children:["Use ",(0,o.jsx)("code",{children:"limitTags"})," prop to limit tags in the input."]}),(0,o.jsx)(F,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Small Size",code:{tsx:null,jsx:ee},children:[(0,o.jsxs)(i.Z,{sx:{mb:5},children:["Use ",(0,o.jsx)("code",{children:"size='small'"})," prop for small sized input."]}),(0,o.jsx)(O,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Custom Input",code:{tsx:null,jsx:_},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"renderInput"})," prop to customize the rendered input."]}),(0,o.jsx)(I,{})]})}),(0,o.jsx)(l.ZP,{item:!0,xs:12,md:6,children:(0,o.jsxs)(s.Z,{title:"Custom Filter",code:{tsx:null,jsx:R},children:[(0,o.jsxs)(i.Z,{sx:{mb:4},children:["Use ",(0,o.jsx)("code",{children:"filterOptions"})," prop to filter the search according to your needs."]}),(0,o.jsx)(T,{})]})})]});var en=et}},function(e){e.O(0,[5307,9774,2888,179],function(){return e(e.s=91669)}),_N_E=e.O()}]);