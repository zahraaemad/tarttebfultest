(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4373],{1163:function(e,n,t){"use strict";t.d(n,{Z:function(){return P}});var r=t(63366),i=t(87462),o=t(67294),l=t(86010),s=t(94780),a=t(36622),c=t(67074),d=t(78884),m=t(40011),u=t(84771),p=t(29630),x=t(1588),h=t(34867);function b(e){return(0,h.Z)("MuiLink",e)}let f=(0,x.Z)("MuiLink",["root","underlineNone","underlineHover","underlineAlways","button","focusVisible"]);var j=t(54844),g=t(41796);let Z={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"},y=e=>Z[e]||e,v=({theme:e,ownerState:n})=>{let t=y(n.color),r=(0,j.D)(e,`palette.${t}`,!1)||n.color,i=(0,j.D)(e,`palette.${t}Channel`);return"vars"in e&&i?`rgba(${i} / 0.4)`:(0,g.Fq)(r,.4)};var C=t(85893);let S=["className","color","component","onBlur","onFocus","TypographyClasses","underline","variant","sx"],k=e=>{let{classes:n,component:t,focusVisible:r,underline:i}=e,o={root:["root",`underline${(0,a.Z)(i)}`,"button"===t&&"button",r&&"focusVisible"]};return(0,s.Z)(o,b,n)},w=(0,c.ZP)(p.Z,{name:"MuiLink",slot:"Root",overridesResolver(e,n){let{ownerState:t}=e;return[n.root,n[`underline${(0,a.Z)(t.underline)}`],"button"===t.component&&n.button]}})(({theme:e,ownerState:n})=>(0,i.Z)({},"none"===n.underline&&{textDecoration:"none"},"hover"===n.underline&&{textDecoration:"none","&:hover":{textDecoration:"underline"}},"always"===n.underline&&(0,i.Z)({textDecoration:"underline"},"inherit"!==n.color&&{textDecorationColor:v({theme:e,ownerState:n})},{"&:hover":{textDecorationColor:"inherit"}}),"button"===n.component&&{position:"relative",WebkitTapHighlightColor:"transparent",backgroundColor:"transparent",outline:0,border:0,margin:0,borderRadius:0,padding:0,cursor:"pointer",userSelect:"none",verticalAlign:"middle",MozAppearance:"none",WebkitAppearance:"none","&::-moz-focus-inner":{borderStyle:"none"},[`&.${f.focusVisible}`]:{outline:"auto"}})),I=o.forwardRef(function(e,n){let t=(0,d.Z)({props:e,name:"MuiLink"}),{className:s,color:a="primary",component:c="a",onBlur:p,onFocus:x,TypographyClasses:h,underline:b="always",variant:f="inherit",sx:j}=t,g=(0,r.Z)(t,S),{isFocusVisibleRef:y,onBlur:v,onFocus:I,ref:P}=(0,m.Z)(),[z,F]=o.useState(!1),L=(0,u.Z)(n,P),G=e=>{v(e),!1===y.current&&F(!1),p&&p(e)},N=e=>{I(e),!0===y.current&&F(!0),x&&x(e)},D=(0,i.Z)({},t,{color:a,component:c,focusVisible:z,underline:b,variant:f}),E=k(D);return(0,C.jsx)(w,(0,i.Z)({color:a,className:(0,l.Z)(E.root,s),classes:h,component:c,onBlur:G,onFocus:N,ref:L,ownerState:D,variant:f,sx:[...Object.keys(Z).includes(a)?[]:[{color:a}],...Array.isArray(j)?j:[j]]},g))});var P=I},66485:function(e){function n(){return new DOMException("The request is not allowed","NotAllowedError")}async function t(e){if(!navigator.clipboard)throw n();return navigator.clipboard.writeText(e)}async function r(e){let t=document.createElement("span");t.textContent=e,t.style.whiteSpace="pre",t.style.webkitUserSelect="auto",t.style.userSelect="all",document.body.appendChild(t);let r=window.getSelection(),i=window.document.createRange();r.removeAllRanges(),i.selectNode(t),r.addRange(i);let o=!1;try{o=window.document.execCommand("copy")}finally{r.removeAllRanges(),window.document.body.removeChild(t)}if(!o)throw n()}async function i(e){try{await t(e)}catch(o){try{await r(e)}catch(i){throw i||o||n()}}}/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */ e.exports=i},29410:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/forms/form-elements/input-mask",function(){return t(31733)}])},39913:function(e,n,t){"use strict";t.d(n,{Z:function(){return k}});var r=t(85893),i=t(67294),o=t(61953),l=t(49837),s=t(72389),a=t(44373),c=t(93481),d=t(80562),m=t(59742),u=t(91359),p=t(87054),x=t(61225),h=t(85390),b=t(21609),f=t(15660),j=t.n(f),g=t(86501),Z=t(66485),y=t.n(Z);let v=e=>e&&("TEXTAREA"===e.nodeName||"INPUT"===e.nodeName),C=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=(0,i.useRef)(null),t=()=>{e.onSuccess&&e.onSuccess(),e.selectOnCopy&&v(n.current)&&n.current.select()},r=()=>{e.onError&&e.onError();let t=!1!==e.selectOnError;t&&v(n.current)&&n.current.select()},o=e=>{y()(e).then(t).catch(r)},l=(0,i.useCallback)(e=>{"string"==typeof e?o(e):n.current&&o(n.current.value)},[]);return{copy:l,target:n}},S=e=>{let{id:n,sx:t,code:f,title:Z,children:y,className:v}=e,[S,k]=(0,i.useState)(!1),[w,I]=(0,i.useState)(null!==f.tsx?"tsx":"jsx"),P=C(),z=(0,x.Z)(e=>e.breakpoints.down("md"));(0,i.useEffect)(()=>{j().highlightAll()},[S,w]);let F=()=>null!==f.tsx&&"tsx"===w?f.tsx.props.children.props.children:null!==f.jsx&&"jsx"===w?f.jsx.props.children.props.children:"",L=()=>{P.copy(F()),g.ZP.success("The source code has been copied to your clipboard.",{duration:2e3})};return(0,r.jsxs)(l.Z,{className:v,sx:{"& .MuiCardHeader-action":{lineHeight:.8},...t},id:n||"card-snippet--".concat(Z.toLowerCase().replace(/ /g,"-")),children:[(0,r.jsx)(m.Z,{title:Z,...z?{}:{action:(0,r.jsx)(d.Z,{onClick:()=>k(!S),children:(0,r.jsx)(b.Z,{icon:"mdi:code-tags",fontSize:20})})}}),(0,r.jsx)(u.Z,{children:y}),z?null:(0,r.jsxs)(c.Z,{in:S,children:[(0,r.jsx)(a.Z,{sx:{my:"0 !important"}}),(0,r.jsxs)(u.Z,{sx:{position:"relative","& pre":{m:"0 !important",maxHeight:500}},children:[(0,r.jsx)(o.Z,{sx:{mb:4,display:"flex",alignItems:"center",justifyContent:"flex-end"},children:(0,r.jsxs)(h.Z,{exclusive:!0,size:"small",color:"primary",value:w,onChange:(e,n)=>null!==n?I(n):null,children:[null!==f.tsx?(0,r.jsx)(p.Z,{value:"tsx",children:(0,r.jsx)(b.Z,{icon:"mdi:language-typescript",fontSize:20})}):null,null!==f.jsx?(0,r.jsx)(p.Z,{value:"jsx",children:(0,r.jsx)(b.Z,{icon:"mdi:language-javascript",fontSize:20})}):null]})}),(0,r.jsx)(s.Z,{title:"Copy the source",placement:"top",children:(0,r.jsx)(d.Z,{onClick:L,sx:{top:"5rem",color:"grey.100",right:"2.5625rem",position:"absolute"},children:(0,r.jsx)(b.Z,{icon:"mdi:content-copy",fontSize:20})})}),(0,r.jsx)("div",{children:null!==f[w]?f[w]:null})]})]})]})};var k=S},10792:function(e,n,t){"use strict";var r=t(85893),i=t(79072);let o=e=>{let{title:n,subtitle:t}=e;return(0,r.jsxs)(i.ZP,{item:!0,xs:12,children:[n,t||null]})};n.Z=o},72931:function(e,n,t){"use strict";var r=t(67074),i=t(61953);let o=(0,r.ZP)(i.Z)(e=>{let{theme:n}=e;return{"& input":{height:56,width:"100%",borderWidth:1,lineHeight:1.5,borderRadius:8,fontSize:"1rem",borderStyle:"solid",letterSpacing:"0.15px",padding:n.spacing(4),backgroundColor:"transparent",color:n.palette.text.primary,fontFamily:n.typography.body1.fontFamily,borderColor:"rgba(".concat(n.palette.customColors.main,", 0.22)"),transition:n.transitions.create(["border-color","box-shadow"]),"&:focus, &:focus-visible":{outline:0,borderWidth:2,padding:n.spacing(3.75),borderColor:"".concat(n.palette.primary.main," !important")},"&::-webkit-input-placeholder":{color:n.palette.text.secondary}}}});n.Z=o},31733:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return b}});var r=t(85893),i=t(79072),o=t(1163),l=t(29630),s=t(10792),a=t(39913),c=t(72931),d=t(3695),m=t(52034),u=t.n(m);t(49634);let p=()=>(0,r.jsxs)(i.ZP,{container:!0,spacing:6,children:[(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"credit-card",sx:{mb:2,fontSize:".75rem"},children:"Credit Card"}),(0,r.jsx)(u(),{id:"credit-card",options:{creditCard:!0},placeholder:"0000 0000 0000 0000"})]}),(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"phone-number",sx:{mb:2,fontSize:".75rem"},children:"Phone Number"}),(0,r.jsx)(u(),{id:"phone-number",placeholder:"1 234 567 8900",options:{phone:!0,phoneRegionCode:"US"}})]}),(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"date",sx:{mb:2,fontSize:".75rem"},children:"Date"}),(0,r.jsx)(u(),{id:"date",placeholder:"2001-01-01",options:{date:!0,delimiter:"-",datePattern:["Y","m","d"]}})]}),(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"time",sx:{mb:2,fontSize:".75rem"},children:"Time"}),(0,r.jsx)(u(),{id:"time",placeholder:"12:00:00",options:{time:!0,timePattern:["h","m","s"]}})]}),(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"numeral",sx:{mb:2,fontSize:".75rem"},children:"Numeral"}),(0,r.jsx)(u(),{id:"numeral",placeholder:"10,000",options:{numeral:!0,numeralThousandsGroupStyle:"thousand"}})]}),(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"blocks",sx:{mb:2,fontSize:".75rem"},children:"Blocks"}),(0,r.jsx)(u(),{id:"blocks",placeholder:"Blocks [4, 3, 3]",options:{blocks:[4,3,3],uppercase:!0}})]}),(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"delimiter",sx:{mb:2,fontSize:".75rem"},children:"Delimiter"}),(0,r.jsx)(u(),{id:"delimiter",placeholder:"Delimiter: '.'",options:{delimiter:"\xb7",blocks:[3,3,3],uppercase:!0}})]}),(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"custom-delimiter",sx:{mb:2,fontSize:".75rem"},children:"Custom Delimiters"}),(0,r.jsx)(u(),{id:"custom-delimiter",placeholder:"Delimiter: ['.', '.', '-']",options:{delimiters:[".",".","-"],blocks:[3,3,3,2],uppercase:!0}})]}),(0,r.jsxs)(i.ZP,{item:!0,xs:12,sm:6,lg:4,children:[(0,r.jsx)(d.Z,{htmlFor:"prefix",sx:{mb:2,fontSize:".75rem"},children:"Prefix"}),(0,r.jsx)(u(),{id:"prefix",options:{prefix:"+63",blocks:[3,3,3,4],uppercase:!0}})]})]}),x=(0,r.jsx)("pre",{className:"language-jsx",children:(0,r.jsx)("code",{className:"language-jsx",children:"// ** MUI Imports\nimport Grid from '@mui/material/Grid'\nimport InputLabel from '@mui/material/InputLabel'\n\n// ** CleaveJS Imports\nimport Cleave from 'cleave.js/react'\nimport 'cleave.js/dist/addons/cleave-phone.us'\n\nconst InputMaskExamples = () => {\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='credit-card' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Credit Card\n        </InputLabel>\n        <Cleave id='credit-card' options={{ creditCard: true }} placeholder='0000 0000 0000 0000' />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='phone-number' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Phone Number\n        </InputLabel>\n        <Cleave id='phone-number' placeholder='1 234 567 8900' options={{ phone: true, phoneRegionCode: 'US' }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='date' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Date\n        </InputLabel>\n        <Cleave\n          id='date'\n          placeholder='2001-01-01'\n          options={{ date: true, delimiter: '-', datePattern: ['Y', 'm', 'd'] }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='time' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Time\n        </InputLabel>\n        <Cleave id='time' placeholder='12:00:00' options={{ time: true, timePattern: ['h', 'm', 's'] }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='numeral' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Numeral\n        </InputLabel>\n        <Cleave id='numeral' placeholder='10,000' options={{ numeral: true, numeralThousandsGroupStyle: 'thousand' }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='blocks' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Blocks\n        </InputLabel>\n        <Cleave id='blocks' placeholder='Blocks [4, 3, 3]' options={{ blocks: [4, 3, 3], uppercase: true }} />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='delimiter' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Delimiter\n        </InputLabel>\n        <Cleave\n          id='delimiter'\n          placeholder=\"Delimiter: '.'\"\n          options={{ delimiter: '\xb7', blocks: [3, 3, 3], uppercase: true }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='custom-delimiter' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Custom Delimiters\n        </InputLabel>\n        <Cleave\n          id='custom-delimiter'\n          placeholder=\"Delimiter: ['.', '.', '-']\"\n          options={{ delimiters: ['.', '.', '-'], blocks: [3, 3, 3, 2], uppercase: true }}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} lg={4}>\n        <InputLabel htmlFor='prefix' sx={{ mb: 2, fontSize: '.75rem' }}>\n          Prefix\n        </InputLabel>\n        <Cleave id='prefix' options={{ prefix: '+63', blocks: [3, 3, 3, 4], uppercase: true }} />\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default InputMaskExamples\n"})}),h=()=>(0,r.jsx)(c.Z,{children:(0,r.jsxs)(i.ZP,{container:!0,spacing:6,children:[(0,r.jsx)(s.Z,{title:(0,r.jsx)(l.Z,{variant:"h5",children:(0,r.jsx)(o.Z,{href:"https://github.com/nosir/cleave.js",target:"_blank",children:"Cleave.js"})}),subtitle:(0,r.jsx)(l.Z,{variant:"body2",children:"Format input text content when you are typing"})}),(0,r.jsx)(i.ZP,{item:!0,xs:12,children:(0,r.jsx)(a.Z,{title:"Input Masks",code:{tsx:null,jsx:x},children:(0,r.jsx)(p,{})})})]})});var b=h}},function(e){e.O(0,[5307,6565,9774,2888,179],function(){return e(e.s=29410)}),_N_E=e.O()}]);